включение библиотеки/модуля
  у require.js есть модули
  модуль может быть минифицирован отдельно
  + как адресовть к части модуля?
  может ли у модуля быть свой конфиг?
  поможет ли минификация?
+ path
  если мне нужно в часть пути, как тут?
=>
    require.config({
        baseUrl: "/another/path",
        paths: {
            "some": "some/v1.0"
        }
      });
      require( ["some/module", "my/module"]
        "/another/path/some/v1.0/module.js"
        "/another/path/some/my/module.js"
      );


javaScript:
 .есть ли внутри функции доступ к массиву переданных
 функции параметров - т.е. к массиву фактических параметров?

 function test(){
    console.log({o:test});
 }
 test(1, 2);
 => пока не получилось.
 => arguments

статья:
 .вопрос скорости реакции оу и его постоянного запаздывания
 по отношению к течению ситуации.
 + а состояние целей тоже в снапшот добавлять?
 + сейчас построение снапшота наивное,
 потенциально добавить многопоточное
 с вопросом - каково оно было в некоторый момент

 + отставание компенсируеться при наличии
 упреждающего моделирования ситуации при
 принятии управленческих решений


дальнейшие планы:
 .построение 2-й версии инфраструктуры.
   .в начале на основе первой
   с фокусом на разделение:
    .инфраструктурного объекта управления
    .понятий инфраструктуры (функции, стереотипы, цели, ...)
      из которых строиться концепция инфратсруктуры
      .концепции инфраструктуры
        в начале построенной на основе 1-й версии библиотеки
        потом, с подменой на собственный слой понятий
 => в итоге:
   инфраструктура способная управлять сама собой
   и описывать концепции управления собой на своём языке
 .на основе 2-й версии можно будет:
   .строить сложные системы - например заглянуть в сторону обдумываемой игры.
   .развивать концепции самоуправления:
     .исключительно структурные.
     .с добавлением безструктурной составляющей.

 .активный интерфейс

 .серверная часть / отдельный модуль - для рантаймного построения концепций.


размышления рядом:
  .javaScript оказываеться малость не подходящим, в смысле работы с объектами.
  .по сравнению с Smalltalk, он проигрывает отсутствием возможности через точку
  посылать сообщения выбранному объекту, в смысле обработки этих сообщений
  на стороне принимающего объекта.

  .интересно, насколько сложно будет поднять в концептуальном программировании
  свои язык и иде под него?
    .как минимум, что-бы:
      точка - прямой вызов.
      двоеточие - посылка сообщения.
    + при этом, иде должна давать контекстную подсказку по обоим разделителям.
    и ей можно было задать/указать как из кода вытягивать подсказки.

  .как текущий вид таблицы соотноситься с:
    .вложенными деревьями.
    .разбивке кода/проэкта на папки.
    .с автоматным программированием.

по организации работы:
  .пора бы добавить таск треккер, связанный с гит:
    .в гит коммиты с ид-ками таск треккера.
    .в треккер задачи и их взаимосвязи.
    думаю в видиньи набора задач появляеться некая дисциплина.

    + интересно, насколько сейчас мне сложно будет вытянуть
    реализацию вложенных деревьев?

существует задача управления инициализацией/развёртыванием/стартовым созданием структур системы.
  .и эта задача своя, особая.
  .кстати обдумывал перенести и её тоже в СУ, но как-то слишком сложно выходит пока.
  .кстати, принятие компонентного подхода из кнокаута наложило ограничения на этот процесс:
    .инициализация идёт от больших частей.
    .меньшеи по мере их создания регестрируються внутри больших.
    .соответственно и взаимосвязи будут регестрироваться в интересном порядке...
    .может отдельный вызов инициализации добавить?


.а не:
    .противоречат ли друг другу.
    .либо не конкурируют ли друг с другом
  подходы:
    .автоматный.
    .управленческий.
  ?
  ведь сдаёться мне, что они похожее делают... но чуть по своему.

  .можно ли по графу указать на цели?
    .ведь он отражает:
      .состояния, события, возможные переходы.
    .а какое из состояний целевое?
    .куда стримимся попасть на графе?
  .т.е.:
    .графы, один из инструментов/_форм_описания_ используемые в управленческом подходе.
    .но понятийной базы теории графов недостаточно:
      .нет понятий:
        .цели,
      .хотя есть понятия:
        .состояния, перехода,
        .события - соотнести с ним в ДОТУ.
    + а вообще, где-бы посмотреть понятийную базу?



IDE - средства разработки:
.интересно, есть-ли что-то похожее на CodeMap для js?



toolBox/automate
.вопрос о внесении
  .задержек перед выполнением переходов.
  .приоритизации действий.
  .введения параметров на переходы...
+ да ещё и с желанием, что-бы:
  .это было довольно лёгким.
  .можно было выбрать набор интерисующих конфигураций/функций.

=> по идее для этого есть таскер, который разбираеться в последовательности
действий и условий.
  .структура запуска/переходов остаёться прежней ведь.
  .сейчас в него будут валиться все запросы, если они валидны.



в виде заметки:
.подход к коду/кодированию всё ближе к работе по ПФУ.
.и главное - я уже перестаю чувствовать/воображать другой возможный подход.
.хотя ранее у меня было чувство, что есть в моих разсуждениях какой-то фокус...
  .я не мог пояснить принятие некоторых решений,
  .либо истоки некоторых идей.
+ но могу ли зделать это сейчас?
  .откуда разворачиваються мои варианты реализации?
  .откуда беруться алгоритмы внутри?






















































