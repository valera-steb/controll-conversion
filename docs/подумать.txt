что-то изменилось.
.в подходе к коду,
.в ожидании от этого проэкта,
.в моём понимании происходящего.


вот только понять бы что....
.всё есть ДОТУ,
.она пронизывает всю информацию с которой я сталкиваюсь.
+ любая приходящая информация всегда соответствует одной из категорий ДОТУ
  .хотя возможно и нескольким,
  .а так-же имеет значение позиция с которой я подхожу/смотрю.
  .но неизменным остаёться принадлежность к одной из категорий.
.всегда есть набор процессов управления
  .хотя возможно точнее сказать - в любом процессе есть часть управления.
.позволить происходящему быть - т.е. выразиться тем идеям/формам с которыми я встретился
 которые учавствуют в ситуации.



изначальная задача:
.исследование, сопоставление, эксперимент, наглядность и формирование образов/подхода.
.уточнение понятий / понимания уже прочитанного.
и что она дала?
.яркую грань структурного и безструктурного управления.
.предел сложности и вскрыла острую нехватку чувства меры.
.идею о безструктурном управлении, хотя точнее, о управлении на основе связей.
  .т.е. когда управляющее воздействие заключаеться в установлении (либо разрыве)
  связей между компонентами.
  .как опция - установки "силы" связи, её направления - параметров.
  .ведь какое безструктурное управление может быть в системе функционально специализированных
  и "неповторимых" элементов?
  .неповторимых, в смысле имеющих очень малую долю схожого функционала.
но с чем вернулся я теперь?
.с желанием ли продолжить?
.либо с выдавленностью сюда и стремлением "спрятаться" в "знакомой" среде?
.но скорее - с желанием решить что-то, научиться новому - которое позволит решить текущие вопросы.

вот теперь моя позиция определена чуть яснее.
.я хочу продолжить обучение,
.а причина в столкновении с чем-то непреодолимым мною сейчас.
.и соответствующая надежда, что в процессе разбора и написания продолжения этого исследования
 найдётся нечто разкрывающее мне дальнейший путь в других областях.
 В частности, той, которая меня сюда толкнула.
.либо время/события пройдут дальше, ситуация поменяеться и мне выпадет решать более лёгкие задачи.
  .хотя в это вериться мало.


и каков процесс следует из такой позиции и изначальной задумки...?
.но для начала надо уточнить, а сама задумка была в какой позиции.
.другими словами - предысторию.
.и вместе с этим - а какова конечная, дальняя, будущая устойчивая цель была?
=> помошь в самонастройке, обретение набора навыков.

ведь ещё есть/задуман/частично_зделан редактор.
.в чём-то близкий этому, являющийся текстовым процессом схожей структуры.
  .текстом - в смысле не исполняемым кодом.

в начале
.была идея выразить матрицу,
.чувство/предощущение, что она даст что-то важное,
.откроет возможность двинуться дальше.
  .кстати рядом - трудности/проблемы - это в том числе и возможности.
  .вот только как их "распаковывать" - т.е. осознавать что за возможности в трудностях/проблемах?
.есть ли сейчас подобное?
  .скорее понимание, что дальнейшие изыскания дадут шаг вперёд,
  .ведь я уже вижу частично в чём он.
.на предыдущем этапе была выявлена важность размещения мыслей рядом,
  .особенно если потом идёт попытка их соотнести между собой.
  .её ли продолжать развивать, либо есть что-то ещё?
  .и насколько большая перестройка вместе с этим должна произойти в коде?
.ещё было устойчивое стремление сам процес описать в терминах процесса
  .в смысле инфраструктуру.

!вот, почему-то мне не хватает прочтения кода, для:
  .выявления концепции лежащей в основе,
  .составления чего-то о встреченном.
.я всё время стараюсь выявить ход мыслей того, кто это писал/делал.
  .каков его подход был.
  .возможно даже - какова версия ДОТУ у него была.
.отсюда и вопрос - а можно ли пойти другим путём, не воспринимая на себя/в_себя другой ход мыслей?
  .можно ли всегда идти одним путём?
  .работать не с процессом чужого мышления - в смысле выявления его и соотнесения со своим,
  .а с результатом этого процесса, разкладывая его:
    .в свой процесс/
    .в свою форму
  ?


в начале было слово - опять к этим словам вернулся...
.и так, надо переосмыслить OU/m/UrlControlle - и взаимодействия рядом с ним.
.выявлен процесс отображения/контроля/ввода урл:
  .кто отвечает за него,
  .и к какой части эта ответственность принадлижит по моим представлениям?
  .а какие часть есть?, учитывая наличие процесса некой конвергенции/надожения идей:
    .ОУ/СУ/среда и задача о построении замкнутой системы управления.
    .MVVM - модель/хранилище/служба.
    .мера и матрицы процессов - их описания - 9-ть пунктов матрицы из ДОТУ.

+ размышления рядом:
  .сейчас я вижу причину выделения - это отдельный процесс, цель которого отображать на экране актуальный урл.
  .при этом через то-же поле вводиться запрашиваемый урл.
  + тот, кто контролирует этот штука процесс, должен иметь доступ/возможность:
    .запустить в реквестере загрузку.
    .спросить реквестер о его состоянии.
    .помнить запрошенный урл.

  ! а вот и ещё один вопрос:
    .можно опираться на внутреннюю логику структуры:
      .если хранить запрошенный урл, он может сигнализировать о состоянии - запрашиваем либо нет.
    и достраивать структуру так, что-бы она отражала в себя изменения:
      .когда запрос закончиться - отлавливала событие и затирала у себя зупрашиваемый урл.
    тогда, для принятия решения о действии, коду нужно обращаться к локальным данным.

    .либо, можно строить структуру, которая будет опираться на другие в процессе принятия решения:
      .т.е. запрашивать состояния реквестера и возможно из него-же брать запрошенный урл.
    при этом нет накладных расходов на отражение.
    Но я чувствую такую структуру не закрытой что-ли. В выполнении своих обязанностей, она опираеться на
    другие, у которых есть свои... В то время, когда у неё должно быть всё, что необходимо ей для принятия решения
    и доступ/права в отношении подчинённых.
    +:
      .принятие решения о том что делать.
      .и выполнение решения
      - разные вещи
    .другими словами я стараюсь явно разделить код, который делает эти 2 вещи: решает и выполняет.
    + и тут-же:
      .решение должно приниматься достаточно быстро...
      .с минимальными задержками
      .предсказуемо, в любых ситуациях
    .другими словами - попытка решения задачи об устойчивости по предсказуемости, заставляет меня:
      .выделять параметры на базе которых принимаеться решение.
      .ограничивать взаимодействие:
        .когда решаем что-то опираемся на "свои" данные.
        .когда выполняем решение - можем передавать выполнение другим, в соответствии с их функциями.
      .из разбивки следует 2 точки контроля:
        .по принятому решению.
        .по исполнению решения.

  .из первого подхода, вытекают вопросы:
    .что должен уметь делать ОУ.
    .какие параметры контролировать.
    .как разпределять контроль... и избегать конфликтов управления разных частей системы
      .разных СУ в системе.

  +:
    .структура ОУ зависит от окружения, в котором его создаю.
    .структура СУ зачастую похожа/одинакова - хотя скорее задачи там всегда похожии,
    что позволяет создать единую библиотеку.

BDD:
.зачем?

.что такое?
  .Specification By Example.
  + спецификация - термин, обозначающий набор требований и параметров,
   которым удовлетворяет некоторый технический объект.

.а что специфицируем?

.т.е.:
  .нужно выделить набор сценариев, которым должна удовлетворять система.
  .при этом, сценарии должны обеспечить некоторое покрытие.
  .сценарий не обязательно привязан к функции, хотя должен учитывать их выделение и покрывать...

+ цель:
  .собрать набор шагов, который будет задавать требования к системе.
  .найти набор шагов, которые выражали-бы цели системы.

.а теперь как это вписать в ПФУ?
  .когда выявляеться некий фактор - как он отражаеться в спецификации?
    .набор шагов, который его подчеркнёт.
    + приведёт к его появлению.
  .как отражаеться стереотип?
    .особенно не залазя в код глубже?
    .сценарии, в которых мне известна степень влияния фактора?
  .как отражаеться целепологание?
    .цель сама по себе какими-то параметрами указываеться.
    .и есть сценарий - когда мы попадаем под действие целевой функции, которая влияет на параметры
    стремясь привести к цели.
  .как отражаються структуры?
    .может набором сценариев их задевающих?
=>
  .каждый тест фиксирует некий фактор, озарение, принятое решение.
  .часть тестов отражает сами факторы.
  .часть - осознанное взаимодействие между выявленным.


итого, что дальше:
.пару сценариев есть, но сомневаюсь, что они покрывают достаточный объём.
.тесты планирую для проверки соответствия второй реализации - т.е. надо "донакрывать".
.а после накрытия - подумать одинаковы ли сценарии для обоих реализаций.
+ поправить описание.


описание...:
.ссылки поправить - номера в <sup>[x]</sup>
.добавить ссылки:
  .на спецификацию.
  .на тесты.
+ что ещё описать...
  .графы.
  + ещё можно дописать что-то про исполняемую спецификацию.
    .как-бы в ней поправить пометки: сценарий/группа - может группу капсом?


что-же мешает начать?
.дописывать тесты в смысле.
.я чувствую их ненужными?
.либо саму работу безперспективной?
.она требует усилий, в основном над собой - и сейчас мне этого не хватает.
.хочеться запустить работу на автомате, где не нужна деятельность по настройке
 себя на заданную волну...


следующий шаг:
.как вводить понятие режима?
.как вообще в базе понятия разширяются?
.ведь ещё нужно ввести ошибку и безструктурное управление...

.хотя есть вопросы...


некоторые планы:
.ввести понятие режима - пока без переходов между ними.
.добавить тестов для инфраструктуры SI - и выделить их отдельно.
.вынести SI в отдельную сборку, со своеим версионированием.
.вынести автоматы в отдельный пакет.
.дорисовать автомату панельку отображения:
  .вот только откуда брать консоль...
  .и как-то идентифицировать состояния/экраны надо-бы.


мысли рядом:
.что-же я в итоге хочу?
.после того, как выделю набор этих библиотек, что я с ними делать буду?
  .играться, описывая нечто большее... ведь думал же об играх.
  .опишу и публикацию зделаю.
  .может кому для обучения покажу/использую...


функция - фича в спецификации:
.как её отделить/определить?
=> по набору целей, которые достигать надо. Для каждой цели - своя.
  .при этом, из набора состояний оно должна достигаться.
  .и сценарии как раз эти состояния и указывают.

соответственно, по отношению к инфраструктуре:
.факторы:
  .в начале ни инфраструктуры ни концепции нету.
  - их надо собрать в какой-то определённый вид.
  - при этом должен существовать быть указан изначальный режим для сборки
  - кстати и граф режимов тоже есть...

  .есть изменения активные
  - их надо фиксировать
  - при этом в разных режимах смотрим на разные.
  - а так-же возможна:
    .необходимость на изменение отреагировать сразу,
    .домустимость отреагировать отложенно.
    .либо вообще зафиксировать цикл реакции.

  .изменения могут увести от цели
  - надо сделать срез состояния.
  - и по ошибкам выбрать активную целевую функцию.
    .кстати, целевая функция зависить должна от чего?
      .ошибок, либо состояния в целом?
    .сейчас, считая её выбор однозначным - по наиболее приоритетной не выполненной цели
     интересно подумать о зависимости,
     можно ли только по ошибке вывести управляющее воздействие?
     вопрос встаёт - какой информации содержаться в ошибке?
     либо, по какому набору информации принимать решение?

    .и тут в пределе:
      .списку ошибок.
      .вектору состояния.
      .режиму.
    + остальное...:
      .структура,
      .вот из безструктурного управления может что-то быть - пока не понятное как отразить.
      .а ещё же структуры прогностики и память
      ! но разве всё это не отображаеться через состояние/режим?
      .состояние - да, но как насчёт функций, цельных решений идущих от безструктурных
       уровней?
  - сразу ли её выполнять, с получением управляющего воздействия?

  ! другими словами - надо сформировать управляющее воздействие
    для текущего состояния с ошибками
    .и тут-же происходит предиктор-корректор - если он вшит в систему.
    .а вот адаптация где?
    .там ведь было что-то про структуры... с памятью и алгоритмом сторожем.
    + из памяти вычитываються:
      .информация - о состоянии/истории/настройках.
      .алгоритмы обработки информации для принятия решений.


  .управляющее воздействие надо применить
  - а где происходит предиктор-корректор?
  - на что может повлиять?
    .оу.
    .су:
      .встроить функцию/режим/цель/стереотип.
      .установить связь.
      .запустить переход.

  ! а как/где тут план?
    .ведь переход между режимами, и сам граф режимов - есть исполнение этапов плана...
    .а граф - его сценарий.


  .есть манёвры, когда вектор целей меняеться со временем (в зависимости от чего-то
  одного из параметров стостояния)
  - это отдельная тема, которая сейчас вижу слишком сложна.
  ! но это будет скорее всего следующая тема, после реализации переключения режимов.

  .при наличии управляющего воздействия на себя возможно наличие инфраструктурной
  концепции, к которой можно обращаться из прикладных концепций (опираться).
  - соответственно дальнейшая развитие - разработка этой концепции.
  - в ней и предиктор-корректор, и безструктурная часть, и ПФУ,
   и схема организации (там где сторож-память-преобразователь...).
  - самоанализ и вообраения себя в разных ситуациях
    .самоанализ - как выяввления графа-сценария режимов и условий переходов.
    + собственно тут - выделение этого графа для возможности дальнейшей оценки
      как плана работ / сетевой модели
    .воображение - как наличие моделей ОУ и среды. Для среды - частей.
    + тут следствием может быть реформирование ОУ:
      .определение (кстати сравнить с осознанием) части среды как ОУ
      с введением этой части в ОУ.

      .выведением части ОУ как среды.

      .и возможно решения задачи об устойчивости по предсказуемости
      точнее её части, которая возможна без практики.

итого план:
.в начале дописывание тестов - сценарии и шаги в функциях.
.потом - подтягивание реализации под тесты.
.и в конце - реализация под текущую модель.

+ в этой итерации:
  .режим.
  .переход между режимами.
  .выбор целевой функции по вектору ошибки.


тесты:
.и в каком виде хранить конфигурацию?
  .JSON, в котором будет набор подгружаемых файлов и константы конфига.
    - проблема с оптимизацией... ведь стандартному надо будет форсировать
    следовательно не смогу определить какие не используються.

  .напрямую подтягивать...
    - зачем классам ссылаться друг на друга - нужны инстансы.
    + есть оптимизация в виде выкидывания лишнего...

  + имеет смысл проверить оптимизатор, может он прочитает конфиг...

.как/куда передать ссылку на ОУ
  ? стоит ли ему быть построенным отдельно до передачи управления в СУ?
    .либо может первой целью СУ как раз и будет построение ОУ.
    .хотя возможна и компромисная вещь:
      .часть построить - как основу
      .часть достроить.
      ! ведь requirejs - одна из частей ОУ, хотя и используеться для
      сборки системы.
        либо прозрачно ОУ давать команды, который внутри догрузку выполнит.

.а как проверить корректность загрузки?
  .проверять то что?


а что у меня получаеться?
.сейчас фокус собрался на описании конфигурации:
  .тут оказываеться интересным кто с кем связон в каком режиме.
  .и это более описательные вещи, чем "программистские".
  .кстати, различить-бы что я под "программистскими" понимаю...

.в описание входит:
  .кто/что есть.
  .и связи между ними...

.и интерес тут в том, что код как-то на второй план отошёл.
  .но что-то ещё есть тут...
  .чувство, которое появляеться, когда я обдумываю взаимосвязи
    .целей/стереотипов/компораторов.
    .а там ещё и функций с целями в текущем режиме.
    .да и вообще - сами режимы.
  .но ключик к нему думаю не в деталях...

.однако что эти раздумья ещё дают?
  .есть предположение, что результат как-то значим ещё
    .кроме построенной структуры.

.кстати, а цели разве тогда нужно как отдельный объект выделять?
  .ведь компаратор и параметры заданы.
  .в первом - эталон.
  .второе - откуда он.
  .выходит цель как связка в данном режиме.
  .имеет ли она смысл за рамками?
    .кроме пояснительного?
    .цель может и нет, но её позиция - приоритет - да.

  .может идея в осознании того, что цель не имеет смысле без
    стереотипа, который оценивает в текущий момент
    степень её достижения?

.другими словами, сейчас я вижу от кода только 2 необходимости:
  .стереотипы (с компараторами, как производной)
  .целевые функции

  + описанный ОУ.
  .остальное:
    .конфигурация.
    .и код инфраструктуры.


и что тогда такое совокупность концепций управления, режим управления

Вектор целей управления
.описание идеального режима функционирования (поведения) объекта.
.Образно говоря, это список, перечень того, чего желаем, с номерами,
назначенными в порядке, обратном порядку вынужденного отказа от
осуществления каждого из этих желаний.


Вектор (текущего) состояния контрольных параметров
.описывающий реальное поведение объекта по параметрам,
входящим в вектор целей


Вектор ошибки управления
.перечень неудовлетворённых желаний соответственно перечню
вектора целей с какими-то оценками степени неудовлетворённости
каждого из них


Полная функция управления
.это своего рода пустая и прозрачная форма, наполняемая содержанием
в процессе управления.
.мера управления, как процесса триединства материи-информации-меры.
.система стереотипов отношений и стереотипов преобразований
информационных модулей, составляющих информационную базу управляющего
субъекта.

+ Содержательным фрагментом полной функции управления является
целевая функция управления


Совокупность концепций управления (целевых функций управления)
.она наполняет конкретным управленческим содержанием все либо
часть этапов полной функции управления.

+ При формировании совокупности концепций управления размерность
пространства параметров вектора состояния увеличивается за счёт
приобщения к столбцу контрольных параметров дополнительно параметров,
объективно и субъективно-управленчески информационно-алгоритмически
связанных с контрольными, — параметров, описывающих состояние объекта,
окружающей среды и системы управления.



Полная функция управления в процессе управления осуществляется:

+ структурным способом управления, когда информация передаётся
адресно по вполне определённым элементам структуры, сложившейся
(или целесообразно сформированной) ещё до начала процесса управления.

+ бесструктурным способом управления, когда Происходит безадресное
циркулярное распространение информации в среде, способной
к порождению структур из себя при установлении
информационно-алгоритмических взаимосвязей между слагающими среду
элементами.



и что-же это получаеться?
.содержательный фрагмент и совокупность концепций...
.ДОТУ - описательная большей частью...

=> т.е.:
  .ОУ концепции не только структура несущая концепцию, её исполняющая.
  !но так-же и структура работающая с описаниями.

  .т.е. можно поменять описание, а потом загрузить его в работающую структуру.

=> другая структура каталога SI:
  .descriptiveModel - коррелируеться с совокупностью концепций
    .stereotypes
    .conceptConfig

  .executiveModel
    .mode:
      .targetVector
      .stereotypes
      .functions
    .ou:
      .ControlImpactApplier
      .

  .infrastructure
  .vm


тесты для executor-а
.выходит нужен ещё фасад для набора объектов.
  .основная цель для ui свормировать модель на которую он опираеться.
  .например разные части таблички в разные модели уходят.
  .хотя почему-бы такой фасад не собрать именно в ui моделе?


что меняетсья в моём подходе к программированию?
.спокойная размеренность.
.цепочка действий:
  .в начале я разберу суть, потом её [покрою тестами] воплощу в коде.
  .разбор сути:
    .в определении с кем часть связанна.
    .интерфейсы к связанным.
    .внутренние части, взаимосвязи.
    .внутренняя модель, определённая интерфейсами и обязанностями.
    .задачи, решаемые этой частью.
.и так, шаг за шагом разбираю,
  .порождая артефакты/записи

  .и на каждом шаге смотря на мозаику и выбирая следующий шаг в сторону
  добавления определённости, где не могу написать код.


концепция!!!
.что как и где.
.хотя главное - зачем!?

+ а выход то был к пониманию выделенности концепции в коде
  .как её ограничить
  .и как вписывать с остальными
.при этом:
  .в концепции заданы несколько целей
  .свои части


как назвать?
.что:
  .компонент исполнителя, который в зависимости от режима меняет "пропускную"
  способность "связей"/вызовов.
.:
  .рецептор?
  .активатор.
+ доп функциональность:
  .проверить что такой метод есть.
  .и проверить, что вызвать этот метод можно.
.и вот непонятки:
  .если придёт 2 вызова, что делать?
  .можно ли зделать вывод для всех состояний, либо зависит от состояния?
!где!?:
  .т.е. чей функционал это.
  .ведь разширяеться инфраструктура/библиотека графов.
.каким образом:
  .приоритеты на переходах.


а что есть наиболее общим целым?
.даже не знаю как точно сформулировать вопрос...
  .наиболее общее, то, что включает в себя всё, то что несёт основную идею.
  .универсум этого мира.

.что на нём лежит, либо какие функции настолько общие я вижу?:
  .загрузить и создать концепцию.
  .запустить исполнителя.
  .создать/удалить UI для исполнителя.
  .предоставить интерфейс для концепции.

  + структура описательная:
    .внутри:
      .совокупность концепций.
      .структурный способ.
    .должна давать:
      .интерфейс для концепции, что-бы могла менять описание.
      .интерфейс для UI - смотреть/менять.


.чем определены эти структуры/функции?

.функция:
  .фасад, ядро, си как целое, объект.



почему изначально я:
.не видел универсума,
.не мог его оформить,
.как-то неуверенно стремился к его выявлению?

+ и тут-же плавающие вопросы:
  .универсум всегда такой "разплывчатый"?
  .а где грань провала текущего универсума?

.любые преобразования происходят при выявлении факторов.
  .калька может быть не полной.
  .



есть ли из сейчас складывающейся структуры выход в предиктор-корректор?
.по другому - на каком уровне должен быть поддержана схема предиктор-корректор?
.но если падение до предудущих возможно, то оно тоже поддерживаеться структурой?


режимы работы исполнителя:
.?:
  .1.на чём основываються?
  .2.проблемы...

.ответы:
  .1.есть:

    .действия, которые можно:
      .запускать сразу.
      .с задержкой по времени:
        .что-бы дать возможность завершиться сложным изменениям.
        .что-бы показать пошагово происходящее.
      .по требованию.
      .частично по требованию.

    + тут речь про смену состояний исполнителя, которая тянет за собой:
      .выбор управляющего воздействия (ув).
      .применение ув.
    ! другими словами, не все переходы на графе нужно откладывать.
    + как быть:
      .с валидацией на переходах?
      .с приходом запроса на несколько переходов?


    .переключение UI:
      .если убираем, должен выйти в один из автоматических режимов.


    .возможна приоритетность в самой логике:
      .если провалилась менее приоритетная цель.
      .ещё не дождались времени применения её ув.
      .а тут провалилась более приоритетная.
      .что делать?

      либо:
      .за время просчёта проваленная цель вернулась в норму

  .2:
    .выработка ув по текущему состоянию, а не тому, с котором его запускали.
    .убегание ситуации из под присмотра СУ.

.текущее решение:
  .в конфиге СУ задавать какой режим: с задержкой либо сразу:
    .для расчёта воздействия.
    .для применения воздействия.
  .для ситуации расчёт сразу, воздействие потом:
    .применять последнее сформированное.
    .использовать приоритеты решений - добавить их.

  .в UI опцию для выполнения по запросу:
    .всего списка.
    .отдельного элемента.


по концепции управления:
.задержка в выработки и принятии управляющего воздействия
.когда предиктор-корректор можно считать устоявщимся?
.насколько сложен простейший предиктор-корректор - и вообще
  .где его применять в моих практических задачах?
  .в боях роботов, вообще тестах в направлении ии.
+ а в жизни где я его применяю?
  .понятно, что стремлюсь почти везде и всегда, но всё-же?
  .выработать решение, оценить его влиянеи, оценить предпологаемый результат,
    поправить решение - выполнить.
  + а что если, поправить решение запустит следующую цепочку?
    .и так решать можно до бесконечности...
    !чего-то важного не хватает:
      .1.схема действует для исследованной области.
      .2.чувство меры - которое машине я передать не смогу.

  ! я путаю задачи:
    .построение модели области.
    .штатное управление.
    .конфликтное управление.






























