су:
  .

.цели:
  .01.hasError==false           - нет ошибок
    .если появилась:
    => в ui отобразить сообщение
       очистить источник o.requester.clearError

  .02.loadedUrl == uiUrl - урл должен быть загружен
  .но ведь ситуации могут быть разные:
    .поменялся uiUrl:
      .стал не равен loadedUrl
      + isLoading сейчас false
      -> запускаем загрузку

      .стал не равен loadedUrl
      + isLoading сейчас true
      + loadingUrl != uiUrl
      -> сообщение об ошибке: дождитесь загрузки
         вернуть значение uiUrl, как в loadingUrl

      .стал не равен loadedUrl
      + isLoading сейчас true
      + loadingUrl == uiUrl
      -> ничего

      .стал равен loadedUrl
      + isLoading сейчас true
      -> сообщение об ошибке: дождитесь загрузки
         вернуть значение uiUrl, как в loadingUrl

    .поменялся loadedUrl - а с какой стати?
        .загрузили уже, но тогда он должен стать как uiUrl.

  .03.isLoading == false - без setTimeout(actionFree, 500); в o.requester
    .т.е. в устойчивом состоянии мы ничего не грузим
  + какие ситуации могут быть:
    .isLoading стал true
      .только в этой ситуации цель будет не достигнута
      и запустит какие-либо действия.
      .такое будет, когда цель.02. запустит загрузку.
      .однако есть варианты:
        .requestState == 'loading'
        => ничего не делаем

        .requestState == 'loaded'
        => отобразить данные,
           установить новый loadedUrl
           почистить o.requester - что переведёт его в состояние 'free'


что надо для СУ?
  .ОУ.
  .список стереотипов.
  .список целей. Цель предоставляет компаратор.

  .глобальное состояние.
    ko.computed, который отслеживает изменение компараторов
      с задержкой в обновлении
    выбирает топовую не достигнутую цель
    и для неё строит управляющее воздействие

  .глобальный исполнитель:
    .получив управляющее воздействие
      и опционально команду из UI
    выполняет все действия из управляющего воздействия
  + собственно после прохода по всем:
    .либо флаг на оценку - с задержкой.
    .либо нет изменений.

+ интересная заметка:
  .стереотип > loadingUrl = o.requester.params.url существует
  только как управляющее воздействие, и нужен исключительно СУ.
  .в ОУ он существует как промежуточный, для синхронизации
  Requester-а и UrlController-а.
  .т.е. он оказался не только контрольным и управляемым,
  но и принадлежащим СУ.